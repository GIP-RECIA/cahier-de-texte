<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:p="http://www.springframework.org/schema/p" 
xmlns:jdbc="http://www.springframework.org/schema/jdbc"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:task="http://www.springframework.org/schema/task" 
xsi:schemaLocation=" 
   http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
   http://www.springframework.org/schema/tx 
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/task
   http://www.springframework.org/schema/task/spring-task-3.0.xsd"> 

    <!-- Charge et fait la correspondance des entrées properties -->    
    <bean id="propertyConfigurer" 
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="locations" > 
          <list>            
            <value>classpath:test-config.properties</value>
          </list>
      </property>
    </bean>
    
    
    <bean id="autoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
    
  <!-- Source de données JDBC 
  <bean id="dataSource" 
    class="">
    <property name="driverClassName"><value>${db.driver}</value></property>
    <property name="url"><value>${db.url}</value></property>
    <property name="username"><value>${db.user}</value></property>
    <property name="password"><value>${db.password}</value></property>
  </bean>-->
  
 
 <jdbc:embedded-database id="dataSource" type="HSQL">
 <jdbc:script location="classpath:schema.sql"/>
 <jdbc:script location="classpath:data.sql"/>
 <!-- 
        <jdbc:script location="classpath:cahier-demo.sql"/> -->
    </jdbc:embedded-database>
 
 <!-- 
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        >
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:mem:cahier" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>
 -->
 
    <!-- Configuration du manager d'entity "-->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource" p:persistence-unit-name="CahierTexte"> 
        <!-- On spécifie ici l'adaptateur Spring pour l''implémentation JPA utilisée -->
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                p:databasePlatform="org.crlr.metier.utils.HsqlDialect"
                p:showSql="false" p:generate-ddl="false" />
        </property>
        <!-- On spécifie ici le tisseur utilisée pour la modification du ByteCode, cf documentation de Spring pour plus de précisions -->
        <property name="loadTimeWeaver">
            <bean
                class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
    </bean>

    <bean id="entityManager"
        class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory"
            ref="entityManagerFactory" />
    </bean>

    <!-- le gestionnaire de transactions -->
    <bean id="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory" />

    <!--Activation de la prise en compte des annotations de type @Required,@Autowired,@PostConstruct,
        @PreDestroy,@Resource,@PersistenceContext,@PersistenceUnit -->
    <context:annotation-config />
    
    <context:component-scan base-package="org.crlr.metier.business" />
    <context:component-scan base-package="org.crlr.metier.facade" />
    <context:component-scan base-package="org.crlr.services" />
    <!--<tx:annotation-driven />-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- Configuration des traitements asynchrones -->
    <task:annotation-driven executor="singleThreadExecutor"/>
    <task:executor id="singleThreadExecutor" pool-size="1"/>
    
    <!-- persistence -->
    <bean
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <!-- traduction des exceptions -->
    <bean
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
  
 

   <bean id="contextSource" class="org.springframework.ldap.core.support.LdapContextSource">
        <property name="url" value="localhost" />
        <property name="userDn" value="uid=root,dc=demo,dc=fr" />
        <property name="base" value="dc=demo,dc=fr" />
        <property name="password" value="+Cra0T!" />
        <property name="pooled" value="true" />
    </bean>
    
  
    
    <bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <constructor-arg ref="contextSource" />
    </bean>
    
    <bean id="ldapBusinessService" class="org.crlr.metier.business.LdapBusiness">
        <property name="ldapTemplate" ref="ldapTemplate" />
        <property name="branchePersonne" value="${ldap.branchePersonne}" />
        <property name="brancheStructure" value="${ldap.brancheStructure}" />
        <property name="nomProfil" value="${ldap.nomProfil}" />
    </bean>
    
    <bean id="logInterceptor" class="org.crlr.intercepteur.facade.LogInterceptor"/>
    
    <aop:aspectj-autoproxy>
        <aop:include name="logInterceptor"/>        
    </aop:aspectj-autoproxy>
    
    

</beans>